graph TD
    A[React アプリ起動] --> B[ログインページ表示]
    B --> C[ユーザー入力（メール・パスワード）]
    C --> D[Cognito にログインリクエスト送信]
    D --> E{認証成功？}
    E -- Yes --> F[JWTトークンを保存（localStorage等）]
    F --> G[API Gateway にユーザー情報リクエスト]
    G --> H[認証ヘッダー付きでリクエスト送信]
    H --> I[レスポンスを受け取り]
    I --> J[ユーザー画面に表示]
    E -- No --> K[エラーメッセージ表示]


sequenceDiagram
    participant ユーザー
    participant ブラウザ（React）
    participant AWS Cognito（User Pool）

    ユーザー->>ブラウザ（React）: メール・パスワード入力
    ブラウザ（React）->>Cognito: InitiateAuth リクエスト（AuthFlow: USER_PASSWORD_AUTH）
    Cognito-->>ブラウザ（React）: 認証結果（Success / Challenge）

    alt 成功時
        Cognito-->>ブラウザ（React）: ID Token, Access Token, Refresh Token
        ブラウザ（React）->>LocalStorage: トークン保存
        ブラウザ（React）-->>ユーザー: ログイン完了画面に遷移
    else 失敗時
        Cognito-->>ブラウザ（React）: エラーメッセージ（例: NotAuthorizedException）
        ブラウザ（React）-->>ユーザー: ログイン失敗メッセージ表示
    end








sequenceDiagram
    participant ユーザー
    participant ブラウザ
    participant CloudFront（CDN）
    participant S3（静的ホスティング）
    participant Cognito（認証）
    participant API Gateway
    participant Lambda
    participant DynamoDB

    ユーザー->>ブラウザ: アクセス（例：https://app.example.com）
    ブラウザ->>CloudFront: リクエスト（HTML/JS/CSS）
    CloudFront->>S3: コンテンツ取得
    S3-->>CloudFront: 静的ファイル（Reactアプリ）
    CloudFront-->>ブラウザ: Reactアプリ読み込み

    ユーザー->>ブラウザ: ログイン情報入力（メール・パスワード）
    ブラウザ->>Cognito: ログインリクエスト
    Cognito-->>ブラウザ: JWTトークン発行（ID/Access）

    ブラウザ->>API Gateway: API呼び出し（トークン付き）
    API Gateway->>Cognito: トークン検証
    Cognito-->>API Gateway: 認証OK
    API Gateway->>Lambda: リクエスト転送
    Lambda->>DynamoDB: データ取得/更新
    DynamoDB-->>Lambda: レスポンス
    Lambda-->>API Gateway: 処理結果
    API Gateway-->>ブラウザ: JSONレスポンス
